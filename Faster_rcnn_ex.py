#%%
import torch
import torchvision
from torchvision import transforms as T

from PIL import Image
import cv2
from google.colab.patches import cv2_imshow

#%%
model = torchvision.models.detection.fasterrcnn_resnet50_fpn(pretrained = True)
model.eval()
#%%
!wget 'http://images.cocodataset.org/val2017/000000037777.jpg'
#%%
ig = Image.open("/content/000000037777.jpg")
#%%
transform = T.ToTensor()
img = transform(ig)
#%%
with torch.no_grad():
  pred = model([img])
#%%
pred # tensor([ [x1,x2 , y1,y2 ] => 291 72 351 230)
#%%
type(pred)
#%%
len(pred)
#%%
type(pred[0])
#%%
pred[0].keys()
#%%
boxes , labels , scores = pred[0]["boxes"] ,pred[0]["labels"] ,pred[0]["scores"] 
#%%
scores
'''
tensor([0.9948, 0.9876, 0.9607, 0.9142, 0.9010, 0.8968, 0.8796, 0.8744, 0.8511,
        0.8308, 0.8022, 0.7680, 0.7506, 0.6588, 0.5832, 0.5827, 0.5032, 0.4855,
        0.4782, 0.4444, 0.4423, 0.4268, 0.4094, 0.3944, 0.3695, 0.3230, 0.3197,
        0.3106, 0.3040, 0.3019, 0.2771, 0.2652, 0.2372, 0.2323, 0.2232, 0.2125,
        0.1745, 0.1729, 0.1718, 0.1622, 0.1545, 0.1421, 0.1414, 0.1281, 0.1193,
        0.1091, 0.0857, 0.0817, 0.0778, 0.0726, 0.0725, 0.0705, 0.0678, 0.0617,
        0.0595, 0.0589, 0.0539, 0.0535, 0.0522, 0.0520, 0.0510, 0.0507])
'''
#%%
num = torch.argwhere(scores > 0.9 ).shape[0]
# 5
#%%
coco_names = ["person" , "bicycle" , "car" , "motorcycle" , "airplane" , "bus" , "train" , "truck" , "boat" , "traffic light" , "fire hydrant" , "street sign" , "stop sign" , "parking meter" , "bench" , "bird" , "cat" , "dog" , "horse" , "sheep" , "cow" , "elephant" , "bear" , "zebra" , "giraffe" , "hat" , "backpack" , "umbrella" , "shoe" , "eye glasses" , "handbag" , "tie" , "suitcase" , 
"frisbee" , "skis" , "snowboard" , "sports ball" , "kite" , "baseball bat" , 
"baseball glove" , "skateboard" , "surfboard" , "tennis racket" , "bottle" , 
"plate" , "wine glass" , "cup" , "fork" , "knife" , "spoon" , "bowl" , 
"banana" , "apple" , "sandwich" , "orange" , "broccoli" , "carrot" , "hot dog" ,
"pizza" , "donut" , "cake" , "chair" , "couch" , "potted plant" , "bed" ,
"mirror" , "dining table" , "window" , "desk" , "toilet" , "door" , "tv" ,
"laptop" , "mouse" , "remote" , "keyboard" , "cell phone" , "microwave" ,
"oven" , "toaster" , "sink" , "refrigerator" , "blender" , "book" ,
"clock" , "vase" , "scissors" , "teddy bear" , "hair drier" , "toothbrush" , "hair brush"]
#%%
font = cv2.FONT_HERSHEY_SIMPLEX
#%%
igg = cv2.imread("/content/000000037777.jpg")

for i in range(num):
  x1 , y1 , x2 , y2 = boxes[i].numpy().astype("int")
  # print(x1,y1,x2,y2)
  # break
  class_name = coco_names[labels.numpy()[i]-1]
  igg = cv2.rectangle(igg,(x1,y1) , (x2,y2) , (0,255,0) , 1) # red
  igg = cv2.putText(igg,class_name,(x1,y1-10),font,0.5,(255,0,0), 1,cv2.LINE_AA) # blue
#%%
cv2_imshow(igg)
#%%
labels
'''
tensor([82, 79, 52, 67, 55, 55, 64, 55, 55, 55, 55, 81, 64, 52, 81, 44, 44, 81,
        51, 55, 81, 81, 55, 82, 86, 55, 81, 67, 44, 84, 52, 81, 47, 81, 86, 62,
        81, 52, 52, 52, 55,  1, 81, 81, 62, 44, 63, 55, 55, 86, 52, 51, 44, 47,
        64, 55, 81, 80, 55, 81, 74, 64])
'''
#%%
boxes
'''
tensor([[291.1583,  75.6388, 351.1081, 230.0000],
        [137.2317, 126.4134, 196.8072, 192.6794],
        [234.0298, 187.5376, 257.2588, 206.0069],
        [ 69.8429, 180.6238, 294.8979, 227.8893],
        [215.5545, 186.7090, 232.4908, 201.2714],
        [229.2052, 178.4287, 242.4043, 189.1334],
        [102.2816, 119.1606, 109.7579, 136.2550],
        [204.3586, 187.4953, 220.2825, 207.8441],
        [217.1612, 200.5048, 231.4939, 214.6144],
        [231.3621, 200.6433, 247.9374, 217.5594],
        [202.8858, 180.7723, 259.0847, 215.1571],
        [265.9250, 134.4927, 293.7535, 137.7777],
        [ 98.9475, 120.0403, 110.6324, 175.7941],
        [232.8049, 188.9269, 247.0089, 201.1433],
        [256.9217, 132.6738, 295.4498, 138.2875],
        [175.0697, 111.2454, 185.6406, 137.4315],
        [195.5084, 120.2848, 202.1774, 134.7075],
        [263.7628, 129.0698, 299.0514, 137.4496],
        [196.6427, 181.2185, 263.6159, 219.1485],
        [218.0666, 199.1213, 245.9162, 217.2953],
        [233.0297, 127.3792, 299.0363, 138.4174],
        [278.4828, 128.8086, 294.7485, 136.4212],
        [205.8721, 182.6974, 233.0919, 212.1260],
        [126.1643,  97.3062, 195.8989, 189.6963],
        [106.2424, 126.9152, 109.5445, 136.0776],
        [230.6236, 188.1828, 241.4398, 196.1133],
        [272.5569, 132.9545, 296.6635, 137.1920],
        [200.5757, 175.9701, 294.4182, 227.3396],
        [186.4529, 112.7755, 192.1155, 134.6760],
        [335.9322,  53.8960, 351.7104,  78.4074],
        [231.4681, 188.5988, 243.0742, 197.9117],
        [200.5100, 132.4207, 229.1458, 136.9851],
        [209.3163, 122.8363, 216.1358, 133.8970],
        [264.6384, 132.5236, 292.6794, 136.2016],
        [ 99.3683, 133.3432, 110.3275, 177.4739],
        [ 20.7325, 215.3077,  88.4849, 228.8656],
        [275.7276, 135.4346, 298.1449, 138.8069],
        [237.5812, 188.8074, 252.0855, 203.3202],
        [218.9266, 181.6331, 258.0513, 209.2755],
        [244.4128, 187.3959, 258.0163, 203.0550],
        [232.1143, 193.6095, 251.7225, 213.7737],
        [ 21.7592, 215.4168,  89.4182, 229.1419],
        [255.3630, 133.5119, 289.3529, 136.7727],
        [199.9593, 131.6636, 230.5733, 135.0924],
        [119.1617, 189.6880, 166.6820, 212.2045],
        [277.2303, 110.9302, 290.0029, 128.3995],
        [ 39.6826, 176.1562, 298.3194, 229.5558],
        [208.1848, 185.9564, 238.7543, 203.4801],
        [230.9263, 188.0007, 256.5596, 205.5954],
        [104.1538, 124.8743, 109.6214, 135.9173],
        [230.6747, 183.0977, 251.6567, 202.6560],
        [ 23.8905, 215.3354,  86.2303, 228.4801],
        [290.2649, 118.2656, 295.3021, 128.3136],
        [195.1819, 122.5382, 202.3078, 134.6684],
        [ 90.4745, 118.6427, 110.7897, 163.2064],
        [223.7251, 187.9593, 233.2467, 199.0445],
        [225.6359, 129.3923, 269.6061, 136.9174],
        [214.8967, 120.7189, 230.2300, 132.1626],
        [230.6191, 188.2645, 244.3673, 201.1225],
        [193.4734, 126.3102, 230.7836, 136.4483],
        [ 24.1277, 215.5962,  89.4061, 228.9127],
        [105.2059, 122.6094, 110.0976, 135.9599]])
'''